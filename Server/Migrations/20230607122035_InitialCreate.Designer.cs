// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShop.Server;

#nullable disable

namespace OnlineShop.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230607122035_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShop.Shared.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("OnlineShop.Shared.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("OnlineShop.Shared.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "A kit provided by Glossier, containing skin care, hair care and makeup products",
                            ImageURL = "https://glossier-prod.imgix.net/products/glossier-makeupset-carousel-01.png?auto=compress,format&cs=srgb&w=720",
                            Name = "Glossier - Beauty Kit",
                            Price = 100m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "A kit provided by Curology, containing skin care products",
                            ImageURL = "https://images.ctfassets.net/mdcr7mahi0vp/5S6Fiuy439Ds6F6BZJD1ey/ce48c9098071b9d2e2fca10b7ce833a4/Curology-Products-at-Target.jpg?w=1200&h=700&fl=progressive&q=99&fm=jpg",
                            Name = "Curology - Skin Care Kit",
                            Price = 50m,
                            Qty = 45
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            Description = "A kit provided by Curology, containing skin care products",
                            ImageURL = "https://cdn.shopify.com/s/files/1/0534/8497/8336/products/cocooil-body-oil-685056_1000x1000.jpg?v=1615252544",
                            Name = "Cocooil - Organic Coconut Oil",
                            Price = 20m,
                            Qty = 30
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            Description = "A kit provided by Schwarzkopf, containing skin care and hair care products",
                            ImageURL = "https://cdn.notinoimg.com/detail_main_mq/schwarzkopf-professional/4045787882247_01-o/schwarzkopf-professional-bc-bonacure-moisture-kick-set-i-fur-normales-bis-trockenes-haar-fur-damen_.jpg",
                            Name = "Schwarzkopf - Hair Care and Skin Care Kit",
                            Price = 50m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Skin Care Kit, containing skin care and hair care products",
                            ImageURL = "https://u9p2d9z5.stackpathcdn.com/shop/media/catalog/product/cache/a5439cd2fd5f0af6ef1ac0cf86bb5fbc/b/r/brooklyn-soap-company-gesichtspflege-box.jpg",
                            Name = "Skin Care Kit",
                            Price = 30m,
                            Qty = 85
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Air Pods - in-ear wireless headphones",
                            ImageURL = "https://res.cloudinary.com/grover/image/upload/f_webp,q_auto/b_white,c_pad,dpr_2.0,h_500,w_520/f_auto,q_auto/v1635755348/txruwrmpwl1sqaplhcq3.png",
                            Name = "Air Pods",
                            Price = 100m,
                            Qty = 120
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "On-ear Golden Headphones - these headphones are not wireless",
                            ImageURL = "https://images.prolighting.de/imagesshop/webpL/PIHDJX5BTN.jpg",
                            Name = "On-ear Golden Headphones",
                            Price = 40m,
                            Qty = 200
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 3,
                            Description = "On-ear Black Headphones - these headphones are not wireless",
                            ImageURL = "https://i.ebayimg.com/images/g/B4AAAOSwxOFafO9B/s-l400.png",
                            Name = "On-ear Black Headphones",
                            Price = 40m,
                            Qty = 300
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            Description = "Sennheiser Digital Camera - High quality digital camera provided by Sennheiser - includes tripod",
                            ImageURL = "https://cdn.shopify.com/s/files/1/0582/7218/6554/products/xs_lav_kit.jpg?v=1629419793",
                            Name = "Sennheiser Digital Camera with Tripod",
                            Price = 600m,
                            Qty = 20
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 3,
                            Description = "Canon Digital Camera - High quality digital camera provided by Canon",
                            ImageURL = "https://m.media-amazon.com/images/I/81jsQHTHKmS._AC_UF1000,1000_QL80_.jpg",
                            Name = "Canon Digital Camera",
                            Price = 500m,
                            Qty = 15
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 3,
                            Description = "Gameboy - Provided by Nintendo",
                            ImageURL = "https://upload.wikimedia.org/wikipedia/commons/f/f4/Game-Boy-FL.jpg",
                            Name = "Nintendo Gameboy",
                            Price = 100m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            Description = "Very comfortable black leather office chair",
                            ImageURL = "https://pictureserver.net/images/pic/08/ff/undef_src_sa_picid_343371_x_760_type_whitesh_image.jpg?ver=343",
                            Name = "Black Leather Office Chair",
                            Price = 50m,
                            Qty = 212
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Very comfortable pink leather office chair",
                            ImageURL = "https://www.orderofficefurniture.co.uk/media/catalog/product/cache/b9d908a4ed8da99de86c0645b2dab50b/a/0/a020_pink.jpg",
                            Name = "Pink Leather Office Chair",
                            Price = 50m,
                            Qty = 112
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 2,
                            Description = "Very comfortable lounge chair",
                            ImageURL = "https://cdn.homedit.com/wp-content/uploads/2013/04/Lugo-Armless-Chaise-Lounge.jpg",
                            Name = "Lounge Chair",
                            Price = 70m,
                            Qty = 90
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 2,
                            Description = "Very comfortable Silver lounge chair",
                            ImageURL = "https://media.architecturaldigest.com/photos/5f160ad4baf7d8877d569924/master/w_320,c_limit/cozy-swivel-chair-o.jpg",
                            Name = "Silver Lounge Chair",
                            Price = 120m,
                            Qty = 95
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 2,
                            Description = "White and blue Porcelain Table Lamp",
                            ImageURL = "https://cdn.shopify.com/s/files/1/0802/8095/products/BM0463-TessaBlue_WhiteBirdTableLamp.jpg?v=1589936237g",
                            Name = "Porcelain Table Lamp",
                            Price = 15m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            Description = "Office Table Lamp",
                            ImageURL = "https://i.pinimg.com/originals/8c/e1/e1/8ce1e1d26d5b6d0450db65614cc01f8f.jpg",
                            Name = "Office Table Lamp",
                            Price = 20m,
                            Qty = 73
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 4,
                            Description = "Comfortable Puma Sneakers in most sizes",
                            ImageURL = "https://images.puma.com/image/upload/f_auto,q_auto,b_rgb:fafafa,w_450,h_450/global/389862/01/sv01/fnd/EEA/fmt/png/Mayze-UT-Sneakers-Women",
                            Name = "Puma Sneakers",
                            Price = 100m,
                            Qty = 50
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 4,
                            Description = "Colorful trainsers - available in most sizes",
                            ImageURL = "https://cdn.dribbble.com/users/43342/screenshots/12334381/media/38e229a39a72d799d8dc58e42c72e097.jpg?compress=1&resize=400x300",
                            Name = "Colorful Trainers",
                            Price = 150m,
                            Qty = 60
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 4,
                            Description = "Blue Nike Trainers - available in most sizes",
                            ImageURL = "https://m.media-amazon.com/images/I/71pE7yNYMAL._AC_UY1000_.jpg",
                            Name = "Blue Nike Trainers",
                            Price = 200m,
                            Qty = 70
                        },
                        new
                        {
                            Id = 21,
                            CategoryId = 4,
                            Description = "Colorful Hummel Trainers - available in most sizes",
                            ImageURL = "https://img01.ztat.net/article/spp-media-p1/d3cc2d2c038b40cc8dcc5ac41fb214c3/b98848ba665c457dbb2ec25093414553.jpg?imwidth=1800&filter=packshot",
                            Name = "Colorful Hummel Trainers",
                            Price = 120m,
                            Qty = 120
                        },
                        new
                        {
                            Id = 22,
                            CategoryId = 4,
                            Description = "Red Nike Trainers - available in most sizes",
                            ImageURL = "https://static.nike.com/a/images/c_limit,w_592,f_auto/t_product_v1/e8c0c1a8-8472-47d4-8b3f-33b069d29bb4/dunk-high-70-womens-shoes-RLwCTf.png",
                            Name = "Red Nike Trainers",
                            Price = 200m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 23,
                            CategoryId = 4,
                            Description = "Birkenstock Sandles - available in most sizes",
                            ImageURL = "https://cdn.shopify.com/s/files/1/0411/5084/0988/articles/Blog_top_5_mens_birkenstock_sandals_image_1800x1200_a4cbdc2a-39d0-4740-a845-b369b5584611_2000x.jpg?v=1672378815",
                            Name = "Birkenstock Sandles",
                            Price = 50m,
                            Qty = 150
                        });
                });

            modelBuilder.Entity("OnlineShop.Shared.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IconCSS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IconCSS = "fas fa-spa",
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 2,
                            IconCSS = "fas fa-couch",
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 3,
                            IconCSS = "fas fa-headphones",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 4,
                            IconCSS = "fas fa-shoe-prints",
                            Name = "Shoes"
                        });
                });

            modelBuilder.Entity("OnlineShop.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "$2a$12$xOPOd1uBEGvlE3P.eRbQYOl72naoC8S2mmh852ZlbFBqCDrQoYi/G",
                            UserName = "Bob"
                        },
                        new
                        {
                            Id = 2,
                            Password = "$2a$12$GBMX2wioG4MFNiHOCD9dyua44uGfJ3TmaajPbhF9yfTzCn4SZLese",
                            UserName = "Sarah"
                        });
                });

            modelBuilder.Entity("OnlineShop.Shared.Product", b =>
                {
                    b.HasOne("OnlineShop.Shared.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
