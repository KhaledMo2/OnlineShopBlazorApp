@page "/ShoppingCart"
@inject NavigationManager NavigationManager
@inject HttpClient Http

<h3>Shopping Cart</h3>

@if (cartItems.Count > 0)
{
    <table class="cart-table">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Price</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Products)
            {
                <tr>
                    <td>@item.Name</td>
                    <td>$@item.Price</td>
                    <td><button @onclick="() => RemoveFromCart(item)">Remove</button></td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Your cart is empty.</p>
}

<button @onclick="GoToHome">Continue Shopping</button>
<button @onclick="GoToPayment">Proceed to Payment</button>

@code {
    List<CartItem> cartItems = new List<CartItem>(); 
    List<Product> Products = new List<Product>();


    protected override async Task OnInitializedAsync()
    {
        var cartresult = await Http.GetFromJsonAsync<List<CartItem>>("api/CartItems");
        if (cartresult != null)
        {
            cartItems = cartresult;
        }
        foreach (var item in cartItems)
        {
            var id = item.ProductId;
            var result = await Http.GetFromJsonAsync<Product>($"api/Products/{id}");
            if (result != null)
            {
                Products.Add(result);
                StateHasChanged();

            }

        }

    }



    protected  async Task RemoveFromCart(Product item)
    {
        foreach (var carditem in cartItems)
        {
            if (item.Id == carditem.ProductId)
            {
                await Http.DeleteAsync($"api/CartItems/{carditem.Id}");
                Products.Remove(item);
                StateHasChanged();

            }

        }


    }



    void GoToHome()
    {
        NavigationManager.NavigateTo("/");
    }

    void GoToPayment()
    {
        NavigationManager.NavigateTo("/payment");
    }

    // Replace this method with your actual data retrieval logic
 

    // Replace this class with your actual cart item data model
}
